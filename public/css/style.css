body,
html {
  width: 100%;
  height: 100%;
}
* {
  margin: 0;
  padding: 0;
}
.breath {
  -webkit-animation-name: breath;
          animation-name: breath;
}
@-webkit-keyframes breath {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0.5;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
@keyframes breath {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0.5;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
.loading {
  left: 0;
  top: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  background: #5889da;
}
.loading .loading_player {
  width: 297px;
  height: 170px;
  left: 124px;
  top: 356px;
  position: absolute;
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  background: url(../img/loading.png) no-repeat;
  -webkit-animation: loading 1s linear infinite;
          animation: loading 1s linear infinite;
  -webkit-animation-timing-function: step-start;
          animation-timing-function: step-start;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  z-index: 9999;
}
@-webkit-keyframes loading {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: -297px 0;
  }
  100% {
    background-position: -594px 0;
  }
}
@keyframes loading {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: -297px 0;
  }
  100% {
    background-position: -594px 0;
  }
}
.loading .progress-num {
  color: #fff;
  font-family: 微软雅黑;
  font-weight: bold;
  font-size: 50px;
  left: 0;
  top: 588px;
  position: absolute;
  right: 0;
  margin: auto;
  width: 100%;
  text-align: center;
}
/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
#all {
  width: 100%;
  height: 100%;
}
.hello {
  left: 0;
  top: 300px;
  position: absolute;
  right: 0;
  margin: auto;
  width: 100%;
  text-align: center;
  font-size: 50px;
  z-index: 999;
}
.sohu {
  background-image: url(../img/sprite.png);
  background-position: 0px -146px;
  width: 114px;
  height: 57px;
  -webkit-background-size: 218px 218px;
          background-size: 218px;
  left: 20px;
  top: 20px;
  position: absolute;
  z-index: 999;
}
